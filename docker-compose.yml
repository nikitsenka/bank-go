services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - VERSION=1.0
        - CC=clang
        - CXX=clang++
      tags:
        - bank-go:latest
        - bank-go:iodbc
    environment:
      - DSN=Driver=PostgreSQL;Servername=db;Port=5432;UserName=postgres;Password=test1234;Database=postgres;Protocol=11.2;
    networks:
      - bank-net
    ports:
      - "80:8080"
    scale: 1
    depends_on:
      db:
        condition: service_healthy
        restart: true
  app-unixodbc:
    build:
      context: .
      dockerfile: unixODBC.Dockerfile
      args:
        - VERSION=1.0
        - CC=clang
        - CXX=clang++
      tags:
        - bank-go:unixodbc
    environment:
      - DSN=Driver=PostgreSQL;Servername=db;Port=5432;UserName=postgres;Password=test1234;Database=postgres;Protocol=11.2;
    networks:
      - bank-net
    ports:
      - "80:8080"
    scale: 0
    depends_on:
      db:
        condition: service_healthy
        restart: true
  db:
    build:
      context: ./docker/db
      dockerfile: Dockerfile
      tags:
        - bank-db:latest
        - bank-db:alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=test1234
      - POSTGRES_DB=postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    networks:
      - bank-net
    restart: unless-stopped
    volumes:
      - ./docker/db:/docker-entrypoint-initdb.d

networks:
  bank-net:
